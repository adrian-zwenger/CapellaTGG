/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.oa.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.ctx.SystemFunction;

import org.polarsys.capella.core.data.oa.ActivityAllocation;
import org.polarsys.capella.core.data.oa.Entity;
import org.polarsys.capella.core.data.oa.OperationalActivity;
import org.polarsys.capella.core.data.oa.OperationalActivityPkg;
import org.polarsys.capella.core.data.oa.OperationalProcess;
import org.polarsys.capella.core.data.oa.Role;
import org.polarsys.capella.core.data.oa.Swimlane;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.oa.OperationalActivity}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface OperationalActivityValidator {
	boolean validate();

	boolean validateOwnedOperationalActivityPkgs(EList<OperationalActivityPkg> value);
	boolean validateActivityAllocations(EList<ActivityAllocation> value);
	boolean validateOwnedSwimlanes(EList<Swimlane> value);
	boolean validateOwnedProcess(EList<OperationalProcess> value);
	boolean validateAllocatorEntities(EList<Entity> value);
	boolean validateRealizingSystemFunctions(EList<SystemFunction> value);
	boolean validateAllocatingRoles(EList<Role> value);
	boolean validateContainedOperationalActivities(EList<OperationalActivity> value);
	boolean validateChildrenOperationalActivities(EList<OperationalActivity> value);
}
