/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.oa.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.ctx.SystemAnalysis;

import org.polarsys.capella.core.data.oa.ConceptPkg;
import org.polarsys.capella.core.data.oa.EntityPkg;
import org.polarsys.capella.core.data.oa.OperationalActivityPkg;
import org.polarsys.capella.core.data.oa.OperationalCapabilityPkg;
import org.polarsys.capella.core.data.oa.RolePkg;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.oa.OperationalAnalysis}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface OperationalAnalysisValidator {
	boolean validate();

	boolean validateOwnedRolePkg(RolePkg value);
	boolean validateOwnedEntityPkg(EntityPkg value);
	boolean validateOwnedConceptPkg(ConceptPkg value);
	boolean validateContainedOperationalCapabilityPkg(OperationalCapabilityPkg value);
	boolean validateContainedOperationalActivityPkg(OperationalActivityPkg value);
	boolean validateAllocatingSystemAnalyses(EList<SystemAnalysis> value);
}
