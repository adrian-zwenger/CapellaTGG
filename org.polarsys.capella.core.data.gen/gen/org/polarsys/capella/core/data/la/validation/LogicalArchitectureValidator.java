/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.la.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.ctx.SystemAnalysis;

import org.polarsys.capella.core.data.la.CapabilityRealizationPkg;
import org.polarsys.capella.core.data.la.LogicalComponentPkg;
import org.polarsys.capella.core.data.la.LogicalFunctionPkg;
import org.polarsys.capella.core.data.la.SystemAnalysisRealization;

import org.polarsys.capella.core.data.pa.PhysicalArchitecture;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.la.LogicalArchitecture}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface LogicalArchitectureValidator {
	boolean validate();

	boolean validateOwnedLogicalComponentPkg(LogicalComponentPkg value);
	boolean validateContainedCapabilityRealizationPkg(CapabilityRealizationPkg value);
	boolean validateContainedLogicalFunctionPkg(LogicalFunctionPkg value);
	boolean validateOwnedSystemAnalysisRealizations(EList<SystemAnalysisRealization> value);
	boolean validateAllocatedSystemAnalysisRealizations(EList<SystemAnalysisRealization> value);
	boolean validateAllocatedSystemAnalyses(EList<SystemAnalysis> value);
	boolean validateAllocatingPhysicalArchitectures(EList<PhysicalArchitecture> value);
}
