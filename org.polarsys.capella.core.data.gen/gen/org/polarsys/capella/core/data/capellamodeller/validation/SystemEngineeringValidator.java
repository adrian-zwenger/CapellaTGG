/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.capellamodeller.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.ctx.SystemAnalysis;

import org.polarsys.capella.core.data.epbs.EPBSArchitecture;

import org.polarsys.capella.core.data.la.LogicalArchitecture;

import org.polarsys.capella.core.data.oa.OperationalAnalysis;

import org.polarsys.capella.core.data.pa.PhysicalArchitecture;

import org.polarsys.capella.core.data.sharedmodel.SharedPkg;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.capellamodeller.SystemEngineering}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SystemEngineeringValidator {
	boolean validate();

	boolean validateContainedOperationalAnalysis(EList<OperationalAnalysis> value);
	boolean validateContainedSystemAnalysis(EList<SystemAnalysis> value);
	boolean validateContainedLogicalArchitectures(EList<LogicalArchitecture> value);
	boolean validateContainedPhysicalArchitectures(EList<PhysicalArchitecture> value);
	boolean validateContainedEPBSArchitectures(EList<EPBSArchitecture> value);
	boolean validateContainedSharedPkgs(EList<SharedPkg> value);
}
