/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.ctx.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.ctx.CapabilityExploitation;
import org.polarsys.capella.core.data.ctx.CapabilityInvolvement;
import org.polarsys.capella.core.data.ctx.Mission;
import org.polarsys.capella.core.data.ctx.SystemComponent;

import org.polarsys.capella.core.data.la.CapabilityRealization;

import org.polarsys.capella.core.data.oa.OperationalCapability;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.ctx.Capability}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface CapabilityValidator {
	boolean validate();

	boolean validateOwnedCapabilityInvolvements(EList<CapabilityInvolvement> value);
	boolean validateInvolvedSystemComponents(EList<SystemComponent> value);
	boolean validatePurposes(EList<CapabilityExploitation> value);
	boolean validatePurposeMissions(EList<Mission> value);
	boolean validateRealizedOperationalCapabilities(EList<OperationalCapability> value);
	boolean validateRealizingCapabilityRealizations(EList<CapabilityRealization> value);
}
