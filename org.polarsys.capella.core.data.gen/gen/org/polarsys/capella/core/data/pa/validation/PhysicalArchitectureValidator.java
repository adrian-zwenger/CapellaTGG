/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.pa.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.cs.AbstractDeploymentLink;

import org.polarsys.capella.core.data.epbs.EPBSArchitecture;

import org.polarsys.capella.core.data.la.CapabilityRealizationPkg;
import org.polarsys.capella.core.data.la.LogicalArchitecture;

import org.polarsys.capella.core.data.pa.LogicalArchitectureRealization;
import org.polarsys.capella.core.data.pa.PhysicalComponentPkg;
import org.polarsys.capella.core.data.pa.PhysicalFunctionPkg;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.pa.PhysicalArchitecture}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PhysicalArchitectureValidator {
	boolean validate();

	boolean validateOwnedPhysicalComponentPkg(PhysicalComponentPkg value);
	boolean validateContainedCapabilityRealizationPkg(CapabilityRealizationPkg value);
	boolean validateContainedPhysicalFunctionPkg(PhysicalFunctionPkg value);
	boolean validateOwnedDeployments(EList<AbstractDeploymentLink> value);
	boolean validateOwnedLogicalArchitectureRealizations(EList<LogicalArchitectureRealization> value);
	boolean validateAllocatedLogicalArchitectureRealizations(EList<LogicalArchitectureRealization> value);
	boolean validateAllocatedLogicalArchitectures(EList<LogicalArchitecture> value);
	boolean validateAllocatingEpbsArchitectures(EList<EPBSArchitecture> value);
}
