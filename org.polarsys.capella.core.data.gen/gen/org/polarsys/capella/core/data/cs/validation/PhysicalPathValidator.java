/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.cs.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.cs.AbstractPhysicalPathLink;
import org.polarsys.capella.core.data.cs.PhysicalPath;
import org.polarsys.capella.core.data.cs.PhysicalPathInvolvement;
import org.polarsys.capella.core.data.cs.PhysicalPathRealization;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.cs.PhysicalPath}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PhysicalPathValidator {
	boolean validate();

	boolean validateInvolvedLinks(EList<AbstractPhysicalPathLink> value);
	boolean validateOwnedPhysicalPathInvolvements(EList<PhysicalPathInvolvement> value);
	boolean validateFirstPhysicalPathInvolvements(EList<PhysicalPathInvolvement> value);
	boolean validateOwnedPhysicalPathRealizations(EList<PhysicalPathRealization> value);
	boolean validateRealizedPhysicalPaths(EList<PhysicalPath> value);
	boolean validateRealizingPhysicalPaths(EList<PhysicalPath> value);
}
