/**
 *
 * $Id$
 */
package org.polarsys.capella.core.data.fa.validation;

import org.eclipse.emf.common.util.EList;

import org.polarsys.capella.core.data.cs.PhysicalPort;

import org.polarsys.capella.core.data.fa.ComponentExchange;
import org.polarsys.capella.core.data.fa.ComponentPort;
import org.polarsys.capella.core.data.fa.ComponentPortKind;
import org.polarsys.capella.core.data.fa.FunctionPort;
import org.polarsys.capella.core.data.fa.OrientationPortKind;

/**
 * A sample validator interface for {@link org.polarsys.capella.core.data.fa.ComponentPort}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ComponentPortValidator {
	boolean validate();

	boolean validateOrientation(OrientationPortKind value);
	boolean validateKind(ComponentPortKind value);
	boolean validateComponentExchanges(EList<ComponentExchange> value);
	boolean validateAllocatedFunctionPorts(EList<FunctionPort> value);
	boolean validateDelegatedComponentPorts(EList<ComponentPort> value);
	boolean validateDelegatingComponentPorts(EList<ComponentPort> value);
	boolean validateAllocatingPhysicalPorts(EList<PhysicalPort> value);
	boolean validateRealizedComponentPorts(EList<ComponentPort> value);
	boolean validateRealizingComponentPorts(EList<ComponentPort> value);
}
