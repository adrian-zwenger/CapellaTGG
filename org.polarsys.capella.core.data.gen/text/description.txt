Model CapellaModeller

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Contains packages:
  capellamodeller <platform:/resource/org.polarsys.capella.core.data.gen/model/CapellaModeller.ecore>
  capellacore <platform:/resource/org.polarsys.capella.core.data.gen/model/CapellaCore.ecore>
  oa <platform:/resource/org.polarsys.capella.core.data.gen/model/OperationalAnalysis.ecore>
  ctx <platform:/resource/org.polarsys.capella.core.data.gen/model/ContextArchitecture.ecore>
  la <platform:/resource/org.polarsys.capella.core.data.gen/model/LogicalArchitecture.ecore>
  pa <platform:/resource/org.polarsys.capella.core.data.gen/model/PhysicalArchitecture.ecore>
  epbs <platform:/resource/org.polarsys.capella.core.data.gen/model/EPBSArchitecture.ecore>
  sharedmodel <platform:/resource/org.polarsys.capella.core.data.gen/model/SharedModel.ecore>
  requirement <platform:/resource/org.polarsys.capella.core.data.gen/model/Requirement.ecore>
  capellacommon <platform:/resource/org.polarsys.capella.core.data.gen/model/CapellaCommon.ecore>
  information <platform:/resource/org.polarsys.capella.core.data.gen/model/Information.ecore>
  cs <platform:/resource/org.polarsys.capella.core.data.gen/model/CompositeStructure.ecore>
  fa <platform:/resource/org.polarsys.capella.core.data.gen/model/FunctionalAnalysis.ecore>
  interaction <platform:/resource/org.polarsys.capella.core.data.gen/model/Interaction.ecore>

Package capellamodeller <platform:/resource/org.polarsys.capella.core.data.gen/model/CapellaModeller.ecore>

  Class Project -> Structure
    Reference keyValuePairs : KeyValue<<0..*>>
    Reference ownedFolders : Folder<<0..*>>
    Reference ownedModelRoots : ModelRoot<<0..*>>

  Class Folder -> Structure
    Reference ownedFolders : Folder<<0..*>>
    Reference ownedModelRoots : ModelRoot<<0..*>>

  Class ModelRoot -> CapellaElement

  Class SystemEngineering -> AbstractModellingStructure, ModelRoot
    Reference containedOperationalAnalysis : OperationalAnalysis<<0..*>>
    Reference containedSystemAnalysis : SystemAnalysis<<0..*>>
    Reference containedLogicalArchitectures : LogicalArchitecture<<0..*>>
    Reference containedPhysicalArchitectures : PhysicalArchitecture<<0..*>>
    Reference containedEPBSArchitectures : EPBSArchitecture<<0..*>>
    Reference containedSharedPkgs : SharedPkg<<0..*>>

  Class SystemEngineeringPkg -> Structure, ModelRoot
    Reference ownedSystemEngineerings : SystemEngineering<<0..*>>

  Class Library -> Project

Package capellacore <platform:/resource/org.polarsys.capella.core.data.gen/model/CapellaCore.ecore>

  Class CapellaElement -> TraceableElement, PublishableElement
    Attribute summary : EString
    Attribute description : EString
    Attribute review : EString
    Reference ownedPropertyValues : AbstractPropertyValue<<0..*>>
    Reference ownedEnumerationPropertyTypes : EnumerationPropertyType<<0..*>>
    Reference appliedPropertyValues : AbstractPropertyValue<<0..*>>
    Reference ownedPropertyValueGroups : PropertyValueGroup<<0..*>>
    Reference appliedPropertyValueGroups : PropertyValueGroup<<0..*>>
    Reference status : EnumerationPropertyLiteral
    Reference features : EnumerationPropertyLiteral<<0..*>>
    Reference appliedRequirements : Requirement<<0..*>>

  Class NamedElement -> AbstractNamedElement, CapellaElement

  Class Relationship -> AbstractRelationship, CapellaElement

  Class Namespace -> NamedElement
    Reference ownedTraces : Trace<<0..*>>
    Reference containedGenericTraces : GenericTrace<<0..*>>
    Reference containedRequirementsTraces : RequirementsTrace<<0..*>>
    Reference namingRules : NamingRule<<0..*>>

  Class NamedRelationship -> Relationship, NamedElement
    Reference namingRules : NamingRule<<0..*>>

  Class Structure -> Namespace
    Reference ownedPropertyValuePkgs : PropertyValuePkg<<0..*>>

  Class AbstractModellingStructure -> ReuserStructure
    Reference ownedArchitectures : ModellingArchitecture<<0..*>>
    Reference ownedArchitecturePkgs : ModellingArchitecturePkg<<0..*>>

  Class ModellingBlock -> Type

  Class ModellingArchitecture -> Structure

  Class ModellingArchitecturePkg -> Structure

  Class Type -> AbstractType, Namespace
    Reference typedElements : TypedElement<<0..*>>

  Class TypedElement -> AbstractTypedElement, NamedElement
    Reference type : Type

  Class Trace -> Relationship, AbstractTrace

  Class AbstractAnnotation -> CapellaElement
    Attribute content : EString

  Class NamingRule -> AbstractAnnotation
    Attribute targetType : EString

  Class Constraint -> NamedElement, AbstractConstraint

  Class KeyValue -> CapellaElement
    Attribute key : EString
    Attribute value : EString

  Class ReuseLink -> Relationship
    Reference reused : ReuseableStructure<<1..1>>
    Reference reuser : ReuserStructure<<1..1>>

  Class ReuseableStructure -> Structure
    Reference reuseLinks : ReuseLink<<0..*>>

  Class ReuserStructure -> Structure
    Reference reuseLinks : ReuseLink<<0..*>>
    Reference ownedReuseLinks : ReuseLink<<0..*>>

  Class GeneralizableElement -> Type
    Attribute abstract : EBoolean
    Reference ownedGeneralizations : Generalization<<0..*>>
    Reference superGeneralizations : Generalization<<0..*>>
    Reference subGeneralizations : Generalization<<0..*>>
    Reference super : GeneralizableElement<<0..*>>
    Reference sub : GeneralizableElement<<0..*>>

  Class Classifier -> GeneralizableElement
    Reference ownedFeatures : Feature<<0..*>>
    Reference containedProperties : Property<<0..*>>

  Class GeneralClass -> Classifier, FinalizableElement
    Attribute visibility : VisibilityKind
    Reference containedOperations : Operation<<0..*>>
    Reference nestedGeneralClasses : GeneralClass<<0..*>>

  Class Generalization -> Relationship
    Reference super : GeneralizableElement<<1..1>>
    Reference sub : GeneralizableElement<<1..1>>

  Class Feature -> NamedElement
    Attribute isAbstract : EBoolean
    Attribute isStatic : EBoolean
    Attribute visibility : VisibilityKind

  Class AbstractExchangeItemPkg -> Structure
    Reference ownedExchangeItems : ExchangeItem<<0..*>>

  Class Allocation -> Relationship, AbstractTrace

  Class Involvement -> Relationship
    Reference involver : InvolverElement<<1..1>>
    Reference involved : InvolvedElement<<1..1>>

  Class InvolverElement -> CapellaElement
    Reference involvedInvolvements : Involvement<<0..*>>

  Class InvolvedElement -> CapellaElement
    Reference involvingInvolvements : Involvement<<0..*>>

  Class AbstractPropertyValue -> NamedElement
    Reference involvedElements : CapellaElement<<0..*>>
    Reference valuedElements : CapellaElement<<0..*>>

  Class StringPropertyValue -> AbstractPropertyValue
    Attribute value : EString

  Class IntegerPropertyValue -> AbstractPropertyValue
    Attribute value : EInt

  Class BooleanPropertyValue -> AbstractPropertyValue
    Attribute value : EBoolean

  Class FloatPropertyValue -> AbstractPropertyValue
    Attribute value : EFloat

  Class EnumerationPropertyValue -> AbstractPropertyValue
    Reference type : EnumerationPropertyType
    Reference value : EnumerationPropertyLiteral

  Class EnumerationPropertyType -> NamedElement
    Reference ownedLiterals : EnumerationPropertyLiteral<<0..*>>

  Class EnumerationPropertyLiteral -> NamedElement

  Class PropertyValueGroup -> Namespace
    Reference valuedElements : CapellaElement<<0..*>>

  Class PropertyValuePkg -> Structure

  Class AbstractDependenciesPkg -> Structure

  Enum VisibilityKind
    Literal UNSET = 0
    Literal PUBLIC = 1
    Literal PROTECTED = 2
    Literal PRIVATE = 3
    Literal PACKAGE = 4

Package oa <platform:/resource/org.polarsys.capella.core.data.gen/model/OperationalAnalysis.ecore>

  Class OperationalAnalysis -> BlockArchitecture
    Reference ownedRolePkg : RolePkg
    Reference ownedEntityPkg : EntityPkg
    Reference ownedConceptPkg : ConceptPkg
    Reference containedOperationalCapabilityPkg : OperationalCapabilityPkg
    Reference containedOperationalActivityPkg : OperationalActivityPkg
    Reference allocatingSystemAnalyses : SystemAnalysis<<0..*>>

  Class OperationalScenario -> NamedElement
    Attribute context : EString<<1..1>>
    Attribute objective : EString<<1..1>>

  Class OperationalActivityPkg -> FunctionPkg
    Reference ownedOperationalActivities : OperationalActivity<<0..*>>
    Reference ownedOperationalActivityPkgs : OperationalActivityPkg<<0..*>>

  Class OperationalActivity -> AbstractFunction
    Reference ownedOperationalActivityPkgs : OperationalActivityPkg<<0..*>>
    Reference activityAllocations : ActivityAllocation<<0..*>>
    Reference ownedSwimlanes : Swimlane<<0..*>>
    Reference ownedProcess : OperationalProcess<<0..*>>
    Reference allocatorEntities : Entity<<0..*>>
    Reference realizingSystemFunctions : SystemFunction<<0..*>>
    Reference allocatingRoles : Role<<0..*>>
    Reference containedOperationalActivities : OperationalActivity<<0..*>>
    Reference childrenOperationalActivities : OperationalActivity<<0..*>>

  Class OperationalProcess -> FunctionalChain
    Reference involvingOperationalCapabilities : OperationalCapability<<0..*>>

  Class Swimlane -> NamedElement, ActivityPartition
    Reference representedEntity : Entity

  Class OperationalCapabilityPkg -> AbstractCapabilityPkg
    Reference ownedOperationalCapabilities : OperationalCapability<<0..*>>
    Reference ownedOperationalCapabilityPkgs : OperationalCapabilityPkg<<0..*>>
    Reference ownedCapabilityConfigurations : CapabilityConfiguration<<0..*>>
    Reference ownedConceptCompliances : ConceptCompliance<<0..*>>

  Class OperationalCapability -> AbstractCapability, Namespace
    Reference compliances : ConceptCompliance<<0..*>>
    Reference configurations : CapabilityConfiguration<<0..*>>
    Reference ownedEntityOperationalCapabilityInvolvements : EntityOperationalCapabilityInvolvement<<0..*>>
    Reference realizingCapabilities : Capability<<0..*>>
    Reference involvedEntities : Entity<<0..*>>

  Class ActivityAllocation -> Allocation
    Reference role : Role<<1..1>>
    Reference activity : OperationalActivity<<1..1>>

  Class RolePkg -> Structure
    Reference ownedRolePkgs : RolePkg<<0..*>>
    Reference ownedRoles : Role<<0..*>>

  Class Role -> AbstractInstance
    Reference ownedRoleAssemblyUsages : RoleAssemblyUsage<<0..*>>
    Reference ownedActivityAllocations : ActivityAllocation<<0..*>>
    Reference roleAllocations : RoleAllocation<<0..*>>
    Reference activityAllocations : ActivityAllocation<<0..*>>
    Reference allocatingEntities : Entity<<0..*>>
    Reference allocatedOperationalActivities : OperationalActivity<<0..*>>

  Class RoleAssemblyUsage -> NamedElement
    Reference child : Role

  Class RoleAllocation -> Allocation
    Reference role : Role<<1..1>>
    Reference entity : Entity<<1..1>>

  Class EntityPkg -> ComponentPkg
    Reference ownedEntities : Entity<<0..*>>
    Reference ownedEntityPkgs : EntityPkg<<0..*>>
    Reference ownedLocations : Location<<0..*>>
    Reference ownedCommunicationMeans : CommunicationMean<<0..*>>

  Class Entity -> AbstractConceptItem, InformationsExchanger, InvolvedElement
    Reference roleAllocations : RoleAllocation<<0..*>>
    Reference organisationalUnitMemberships : OrganisationalUnitComposition<<0..*>>
    Reference actualLocation : Location
    Reference subEntities : Entity<<0..*>>
    Reference ownedEntities : Entity<<0..*>>
    Reference ownedCommunicationMeans : CommunicationMean<<0..*>>
    Reference ownedRoleAllocations : RoleAllocation<<0..*>>
    Reference allocatedOperationalActivities : OperationalActivity<<0..*>>
    Reference allocatedRoles : Role<<0..*>>
    Reference involvingOperationalCapabilities : OperationalCapability<<0..*>>
    Reference realizingSystemComponents : SystemComponent<<0..*>>

  Class ConceptPkg -> Structure
    Reference ownedConceptPkgs : ConceptPkg<<0..*>>
    Reference ownedConcepts : Concept<<0..*>>

  Class Concept -> NamedElement
    Reference compliances : ConceptCompliance<<0..*>>
    Reference compositeLinks : ItemInConcept<<0..*>>

  Class ConceptCompliance -> Relationship
    Reference complyWithConcept : Concept<<1..1>>
    Reference compliantCapability : OperationalCapability<<1..1>>

  Class ItemInConcept -> NamedElement
    Reference concept : Concept<<1..1>>
    Reference item : AbstractConceptItem<<1..1>>

  Class AbstractConceptItem -> Component
    Reference composingLinks : ItemInConcept<<0..*>>

  Class CommunityOfInterest -> NamedElement
    Reference communityOfInterestCompositions : CommunityOfInterestComposition<<0..*>>

  Class CommunityOfInterestComposition -> NamedElement
    Reference communityOfInterest : CommunityOfInterest
    Reference interestedOrganisationUnit : OrganisationalUnit

  Class OrganisationalUnit -> NamedElement
    Reference organisationalUnitCompositions : OrganisationalUnitComposition<<0..*>>
    Reference communityOfInterestMemberships : CommunityOfInterestComposition<<0..*>>

  Class OrganisationalUnitComposition -> NamedElement
    Reference organisationalUnit : OrganisationalUnit
    Reference participatingEntity : Entity

  Class Location -> AbstractConceptItem
    Attribute locationDescription : EString
    Reference locatedEntities : Entity<<0..*>>

  Class CapabilityConfiguration -> AbstractConceptItem
    Reference configuredCapability : OperationalCapability

  Class CommunicationMean -> NamedRelationship, ComponentExchange
    Reference sourceEntity : Entity
    Reference targetEntity : Entity

  Class EntityOperationalCapabilityInvolvement -> Involvement
    Reference entity : Entity<<1..1>>
    Reference capability : OperationalCapability<<1..1>>

Package ctx <platform:/resource/org.polarsys.capella.core.data.gen/model/ContextArchitecture.ecore>

  Class SystemAnalysis -> ComponentArchitecture
    Reference ownedSystemComponentPkg : SystemComponentPkg
    Reference ownedMissionPkg : MissionPkg
    Reference containedCapabilityPkg : CapabilityPkg
    Reference containedSystemFunctionPkg : SystemFunctionPkg
    Reference ownedOperationalAnalysisRealizations : OperationalAnalysisRealization<<0..*>>
    Reference allocatedOperationalAnalysisRealizations : OperationalAnalysisRealization<<0..*>>
    Reference allocatedOperationalAnalyses : OperationalAnalysis<<0..*>>
    Reference allocatingLogicalArchitectures : LogicalArchitecture<<0..*>>

  Class SystemFunction -> AbstractFunction
    Reference ownedSystemFunctionPkgs : SystemFunctionPkg<<0..*>>
    Reference allocatingSystemComponents : SystemComponent<<0..*>>
    Reference realizedOperationalActivities : OperationalActivity<<0..*>>
    Reference realizingLogicalFunctions : LogicalFunction<<0..*>>
    Reference containedSystemFunctions : SystemFunction<<0..*>>
    Reference childrenSystemFunctions : SystemFunction<<0..*>>

  Class SystemFunctionPkg -> FunctionPkg
    Reference ownedSystemFunctions : SystemFunction<<0..*>>
    Reference ownedSystemFunctionPkgs : SystemFunctionPkg<<0..*>>

  Class SystemCommunicationHook -> NamedElement
    Reference communication : SystemCommunication
    Reference type : Component

  Class SystemCommunication -> Relationship
    Reference ends : SystemCommunicationHook<<2..2>>

  Class CapabilityInvolvement -> Involvement
    Reference systemComponent : SystemComponent<<1..1>>
    Reference capability : Capability<<1..1>>

  Class MissionInvolvement -> Involvement
    Reference systemComponent : SystemComponent<<1..1>>
    Reference mission : Mission<<1..1>>

  Class Mission -> NamedElement, InvolverElement
    Reference ownedMissionInvolvements : MissionInvolvement<<0..*>>
    Reference involvedSystemComponents : SystemComponent<<0..*>>
    Reference ownedCapabilityExploitations : CapabilityExploitation<<0..*>>
    Reference exploitedCapabilities : Capability<<0..*>>

  Class MissionPkg -> Structure
    Reference ownedMissionPkgs : MissionPkg<<0..*>>
    Reference ownedMissions : Mission<<0..*>>

  Class Capability -> AbstractCapability
    Reference ownedCapabilityInvolvements : CapabilityInvolvement<<0..*>>
    Reference involvedSystemComponents : SystemComponent<<0..*>>
    Reference purposes : CapabilityExploitation<<0..*>>
    Reference purposeMissions : Mission<<0..*>>
    Reference realizedOperationalCapabilities : OperationalCapability<<0..*>>
    Reference realizingCapabilityRealizations : CapabilityRealization<<0..*>>

  Class CapabilityExploitation -> Relationship
    Reference mission : Mission<<1..1>>
    Reference capability : Capability<<1..1>>

  Class CapabilityPkg -> AbstractCapabilityPkg
    Reference ownedCapabilities : Capability<<0..*>>
    Reference ownedCapabilityPkgs : CapabilityPkg<<0..*>>

  Class OperationalAnalysisRealization -> ArchitectureAllocation

  Class SystemComponentPkg -> ComponentPkg
    Reference ownedSystemComponents : SystemComponent<<0..*>>
    Reference ownedSystemComponentPkgs : SystemComponentPkg<<0..*>>

  Class SystemComponent -> Component, InvolvedElement
    Reference ownedSystemComponents : SystemComponent<<0..*>>
    Reference ownedSystemComponentPkgs : SystemComponentPkg<<0..*>>
    Attribute dataComponent : EBoolean
    Reference dataType : Classifier<<0..*>>
    Reference involvingCapabilities : Capability<<0..*>>
    Reference capabilityInvolvements : CapabilityInvolvement<<0..*>>
    Reference involvingMissions : Mission<<0..*>>
    Reference missionInvolvements : MissionInvolvement<<0..*>>
    Reference realizedEntities : Entity<<0..*>>
    Reference realizingLogicalComponents : LogicalComponent<<0..*>>
    Reference allocatedSystemFunctions : SystemFunction<<0..*>>

Package la <platform:/resource/org.polarsys.capella.core.data.gen/model/LogicalArchitecture.ecore>

  Class LogicalArchitecturePkg -> BlockArchitecturePkg
    Reference ownedLogicalArchitectures : LogicalArchitecture<<0..*>>

  Class LogicalArchitecture -> ComponentArchitecture
    Reference ownedLogicalComponentPkg : LogicalComponentPkg
    Reference containedCapabilityRealizationPkg : CapabilityRealizationPkg
    Reference containedLogicalFunctionPkg : LogicalFunctionPkg
    Reference ownedSystemAnalysisRealizations : SystemAnalysisRealization<<0..*>>
    Reference allocatedSystemAnalysisRealizations : SystemAnalysisRealization<<0..*>>
    Reference allocatedSystemAnalyses : SystemAnalysis<<0..*>>
    Reference allocatingPhysicalArchitectures : PhysicalArchitecture<<0..*>>

  Class LogicalFunction -> AbstractFunction
    Reference ownedLogicalFunctionPkgs : LogicalFunctionPkg<<0..*>>
    Reference allocatingLogicalComponents : LogicalComponent<<0..*>>
    Reference realizedSystemFunctions : SystemFunction<<0..*>>
    Reference realizingPhysicalFunctions : PhysicalFunction<<0..*>>
    Reference containedLogicalFunctions : LogicalFunction<<0..*>>
    Reference childrenLogicalFunctions : LogicalFunction<<0..*>>

  Class LogicalFunctionPkg -> FunctionPkg
    Reference ownedLogicalFunctions : LogicalFunction<<0..*>>
    Reference ownedLogicalFunctionPkgs : LogicalFunctionPkg<<0..*>>

  Class LogicalComponent -> Component, CapabilityRealizationInvolvedElement
    Reference ownedLogicalComponents : LogicalComponent<<0..*>>
    Reference ownedLogicalArchitectures : LogicalArchitecture<<0..*>>
    Reference ownedLogicalComponentPkgs : LogicalComponentPkg<<0..*>>
    Reference subLogicalComponents : LogicalComponent<<0..*>>
    Reference allocatedLogicalFunctions : LogicalFunction<<0..*>>
    Reference realizedSystemComponents : SystemComponent<<0..*>>
    Reference realizingPhysicalComponents : PhysicalComponent<<0..*>>

  Class LogicalComponentPkg -> ComponentPkg
    Reference ownedLogicalComponents : LogicalComponent<<0..*>>
    Reference ownedLogicalComponentPkgs : LogicalComponentPkg<<0..*>>

  Class CapabilityRealization -> AbstractCapability
    Reference ownedCapabilityRealizationInvolvements : CapabilityRealizationInvolvement<<0..*>>
    Reference involvedComponents : CapabilityRealizationInvolvedElement<<0..*>>
    Reference realizedCapabilities : Capability<<0..*>>
    Reference realizedCapabilityRealizations : CapabilityRealization<<0..*>>
    Reference realizingCapabilityRealizations : CapabilityRealization<<0..*>>

  Class CapabilityRealizationPkg -> AbstractCapabilityPkg
    Reference ownedCapabilityRealizations : CapabilityRealization<<0..*>>
    Reference ownedCapabilityRealizationPkgs : CapabilityRealizationPkg<<0..*>>

  Class SystemAnalysisRealization -> ArchitectureAllocation

  Class ContextInterfaceRealization -> InterfaceAllocation

Package pa <platform:/resource/org.polarsys.capella.core.data.gen/model/PhysicalArchitecture.ecore>

  Class PhysicalArchitecturePkg -> BlockArchitecturePkg
    Reference ownedPhysicalArchitecturePkgs : PhysicalArchitecturePkg<<0..*>>
    Reference ownedPhysicalArchitectures : PhysicalArchitecture<<0..*>>

  Class PhysicalArchitecture -> ComponentArchitecture
    Reference ownedPhysicalComponentPkg : PhysicalComponentPkg
    Reference containedCapabilityRealizationPkg : CapabilityRealizationPkg
    Reference containedPhysicalFunctionPkg : PhysicalFunctionPkg
    Reference ownedDeployments : AbstractDeploymentLink<<0..*>>
    Reference ownedLogicalArchitectureRealizations : LogicalArchitectureRealization<<0..*>>
    Reference allocatedLogicalArchitectureRealizations : LogicalArchitectureRealization<<0..*>>
    Reference allocatedLogicalArchitectures : LogicalArchitecture<<0..*>>
    Reference allocatingEpbsArchitectures : EPBSArchitecture<<0..*>>

  Class PhysicalFunction -> AbstractFunction
    Reference ownedPhysicalFunctionPkgs : PhysicalFunctionPkg<<0..*>>
    Reference allocatingPhysicalComponents : PhysicalComponent<<0..*>>
    Reference realizedLogicalFunctions : LogicalFunction<<0..*>>
    Reference containedPhysicalFunctions : PhysicalFunction<<0..*>>
    Reference childrenPhysicalFunctions : PhysicalFunction<<0..*>>

  Class PhysicalFunctionPkg -> FunctionPkg
    Reference ownedPhysicalFunctions : PhysicalFunction<<0..*>>
    Reference ownedPhysicalFunctionPkgs : PhysicalFunctionPkg<<0..*>>

  Class PhysicalComponent -> AbstractPhysicalArtifact, Component, CapabilityRealizationInvolvedElement, DeployableElement, DeploymentTarget
    Attribute kind : PhysicalComponentKind
    Attribute nature : PhysicalComponentNature
    Reference ownedDeploymentLinks : AbstractDeploymentLink<<0..*>>
    Reference ownedPhysicalComponents : PhysicalComponent<<0..*>>
    Reference ownedPhysicalComponentPkgs : PhysicalComponentPkg<<0..*>>
    Reference logicalInterfaceRealizations : LogicalInterfaceRealization<<0..*>>
    Reference subPhysicalComponents : PhysicalComponent<<0..*>>
    Reference realizedLogicalComponents : LogicalComponent<<0..*>>
    Reference allocatedPhysicalFunctions : PhysicalFunction<<0..*>>
    Reference deployedPhysicalComponents : PhysicalComponent<<0..*>>
    Reference deployingPhysicalComponents : PhysicalComponent<<0..*>>

  Class PhysicalComponentPkg -> ComponentPkg, AssociationPkg
    Reference ownedPhysicalComponents : PhysicalComponent<<0..*>>
    Reference ownedPhysicalComponentPkgs : PhysicalComponentPkg<<0..*>>
    Reference ownedKeyParts : KeyPart<<0..*>>
    Reference ownedDeployments : AbstractDeploymentLink<<0..*>>

  Class PhysicalNode -> PhysicalComponent
    Reference subPhysicalNodes : PhysicalNode<<0..*>>

  Class LogicalArchitectureRealization -> ArchitectureAllocation

  Class LogicalInterfaceRealization -> InterfaceAllocation

  Enum PhysicalComponentKind
    Literal UNSET = 0
    Literal HARDWARE = 1
    Literal HARDWARE_COMPUTER = 2
    Literal SOFTWARE = 3
    Literal SOFTWARE_DEPLOYMENT_UNIT = 4
    Literal SOFTWARE_EXECUTION_UNIT = 5
    Literal SOFTWARE_APPLICATION = 6
    Literal FIRMWARE = 7
    Literal PERSON = 8
    Literal FACILITIES = 9
    Literal DATA = 10
    Literal MATERIALS = 11
    Literal SERVICES = 12
    Literal PROCESSES = 13

  Enum PhysicalComponentNature
    Literal UNSET = 0
    Literal BEHAVIOR = 1
    Literal NODE = 2

Package epbs <platform:/resource/org.polarsys.capella.core.data.gen/model/EPBSArchitecture.ecore>

  Class EPBSArchitecturePkg -> BlockArchitecturePkg
    Reference ownedEPBSArchitectures : EPBSArchitecture<<0..*>>

  Class EPBSArchitecture -> ComponentArchitecture
    Reference ownedConfigurationItemPkg : ConfigurationItemPkg
    Reference containedCapabilityRealizationPkg : CapabilityRealizationPkg
    Reference ownedPhysicalArchitectureRealizations : PhysicalArchitectureRealization<<0..*>>
    Reference allocatedPhysicalArchitectureRealizations : PhysicalArchitectureRealization<<0..*>>
    Reference allocatedPhysicalArchitectures : PhysicalArchitecture<<0..*>>

  Class ConfigurationItemPkg -> ComponentPkg
    Reference ownedConfigurationItems : ConfigurationItem<<0..*>>
    Reference ownedConfigurationItemPkgs : ConfigurationItemPkg<<0..*>>

  Class ConfigurationItem -> CapabilityRealizationInvolvedElement, Component
    Attribute itemIdentifier : EString
    Attribute kind : ConfigurationItemKind
    Reference ownedConfigurationItems : ConfigurationItem<<0..*>>
    Reference ownedConfigurationItemPkgs : ConfigurationItemPkg<<0..*>>
    Reference ownedPhysicalArtifactRealizations : PhysicalArtifactRealization<<0..*>>
    Reference allocatedPhysicalArtifacts : AbstractPhysicalArtifact<<0..*>>

  Class PhysicalArchitectureRealization -> ArchitectureAllocation

  Class PhysicalArtifactRealization -> Allocation
    Reference realizedPhysicalArtifact : AbstractPhysicalArtifact<<1..1>>
    Reference realizingConfigurationItem : ConfigurationItem<<1..1>>

  Enum ConfigurationItemKind
    Literal Unset = 0
    Literal COTSCI = 1
    Literal CSCI = 2
    Literal HWCI = 3
    Literal InterfaceCI = 4
    Literal NDICI = 5
    Literal PrimeItemCI = 6
    Literal SystemCI = 7

Package sharedmodel <platform:/resource/org.polarsys.capella.core.data.gen/model/SharedModel.ecore>

  Class SharedPkg -> ReuseableStructure, ModelRoot
    Reference ownedDataPkg : DataPkg
    Reference ownedGenericPkg : GenericPkg

  Class GenericPkg -> Structure
    Reference subGenericPkgs : GenericPkg<<0..*>>
    Reference capellaElements : CapellaElement<<0..*>>

Package requirement <platform:/resource/org.polarsys.capella.core.data.gen/model/Requirement.ecore>

  Class RequirementsPkg -> Structure
    Attribute additionalInformation : EString
    Attribute level : EString
    Reference ownedRequirements : Requirement<<0..*>>
    Reference ownedRequirementPkgs : RequirementsPkg<<0..*>>

  Class RequirementsTrace -> Trace
    Reference source : TraceableElement<<1..1>>
    Reference target : TraceableElement<<1..1>>

  Class Requirement -> Namespace
    Attribute isObsolete : EBoolean
    Attribute requirementId : EString
    Attribute additionalInformation : EString
    Attribute verificationMethod : EString
    Attribute verificationPhase : EString
    Attribute implementationVersion : EString
    Attribute feature : EString
    Reference relatedCapellaElements : CapellaElement<<0..*>>

  Class SystemFunctionalInterfaceRequirement -> Requirement

  Class SystemFunctionalRequirement -> Requirement

  Class SystemNonFunctionalInterfaceRequirement -> Requirement

  Class SystemNonFunctionalRequirement -> Requirement

  Class SystemUserRequirement -> Requirement

Package capellacommon <platform:/resource/org.polarsys.capella.core.data.gen/model/CapellaCommon.ecore>

  Class AbstractCapabilityPkg -> Structure

  Class GenericTrace -> Trace
    Reference keyValuePairs : KeyValue<<0..*>>
    Reference source : TraceableElement<<1..1>>
    Reference target : TraceableElement<<1..1>>

  Class TransfoLink -> GenericTrace

  Class JustificationLink -> GenericTrace

  Class CapabilityRealizationInvolvement -> Involvement
    Reference involvedCapabilityRealizationInvolvedElement : CapabilityRealizationInvolvedElement<<1..1>>

  Class CapabilityRealizationInvolvedElement -> InvolvedElement
    Reference capabilityRealizationInvolvements : CapabilityRealizationInvolvement<<0..*>>
    Reference involvingCapabilityRealizations : CapabilityRealization<<0..*>>

  Class StateMachine -> CapellaElement, AbstractBehavior
    Reference ownedRegions : Region<<0..*>>
    Reference ownedConnectionPoints : Pseudostate<<0..*>>

  Class Region -> NamedElement
    Reference ownedStates : AbstractState<<0..*>>
    Reference ownedTransitions : StateTransition<<0..*>>
    Reference involvedStates : AbstractState<<0..*>>

  Class State -> AbstractState
    Reference ownedRegions : Region<<0..*>>
    Reference ownedConnectionPoints : Pseudostate<<0..*>>
    Reference availableAbstractFunctions : AbstractFunction<<0..*>>
    Reference availableFunctionalChains : FunctionalChain<<0..*>>
    Reference availableAbstractCapabilities : AbstractCapability<<0..*>>
    Reference entry : AbstractEvent<<0..*>>
    Reference doActivity : AbstractEvent<<0..*>>
    Reference exit : AbstractEvent<<0..*>>
    Reference stateInvariant : AbstractConstraint

  Class Mode -> State

  Class FinalState -> State

  Class AbstractState -> NamedElement, IState
    Reference ownedAbstractStateRealizations : AbstractStateRealization<<0..*>>
    Reference realizedAbstractStates : AbstractState<<0..*>>
    Reference realizingAbstractStates : AbstractState<<0..*>>
    Reference outgoing : StateTransition<<0..*>>
    Reference incoming : StateTransition<<0..*>>
    Reference involverRegions : Region<<0..*>>

  Class StateTransition -> NamedElement, Relationship
    Attribute kind : TransitionKind
    Attribute triggerDescription : EString
    Reference guard : Constraint
    Reference source : AbstractState<<1..1>>
    Reference target : AbstractState<<1..1>>
    Reference effect : AbstractEvent<<0..*>>
    Reference triggers : AbstractEvent<<0..*>>
    Reference ownedStateTransitionRealizations : StateTransitionRealization<<0..*>>
    Reference realizedStateTransitions : StateTransition<<0..*>>
    Reference realizingStateTransitions : StateTransition<<0..*>>

  Class Pseudostate -> AbstractState

  Class InitialPseudoState -> Pseudostate

  Class JoinPseudoState -> Pseudostate

  Class ForkPseudoState -> Pseudostate

  Class ChoicePseudoState -> Pseudostate

  Class TerminatePseudoState -> Pseudostate

  Class AbstractStateRealization -> Allocation
    Reference realizedAbstractState : AbstractState<<1..1>>
    Reference realizingAbstractState : AbstractState<<1..1>>

  Class StateTransitionRealization -> Allocation
    Reference realizedStateTransition : StateTransition<<1..1>>
    Reference realizingStateTransition : StateTransition<<1..1>>

  Class ShallowHistoryPseudoState -> Pseudostate

  Class DeepHistoryPseudoState -> Pseudostate

  Class EntryPointPseudoState -> Pseudostate

  Class ExitPointPseudoState -> Pseudostate

  Class StateEventRealization -> Allocation
    Reference realizedEvent : StateEvent<<1..1>>
    Reference realizingEvent : StateEvent<<1..1>>

  Class StateEvent -> NamedElement, AbstractEvent
    Reference expression : Constraint
    Reference ownedStateEventRealizations : StateEventRealization<<0..*>>

  Class ChangeEvent -> StateEvent
    Attribute kind : ChangeEventKind

  Class TimeEvent -> StateEvent
    Attribute kind : TimeEventKind

  Enum TransitionKind
    Literal internal = 0
    Literal local = 1
    Literal external = 2

  Enum TimeEventKind
    Literal AT = 0
    Literal AFTER = 1

  Enum ChangeEventKind
    Literal WHEN = 0

Package information <platform:/resource/org.polarsys.capella.core.data.gen/model/Information.ecore>

  Class AbstractInstance -> Property
    Reference representingInstanceRoles : InstanceRole<<0..*>>

  Class AssociationPkg -> Structure
    Attribute visibility : VisibilityKind
    Reference ownedAssociations : Association<<0..*>>

  Class Association -> NamedRelationship
    Reference ownedMembers : Property<<0..2>>
    Reference navigableMembers : Property<<0..2>>

  Class Class -> GeneralClass
    Attribute isPrimitive : EBoolean
    Reference keyParts : KeyPart<<0..*>>
    Reference ownedStateMachines : StateMachine<<0..*>>
    Reference ownedDataValues : DataValue<<0..*>>
    Reference ownedInformationRealizations : InformationRealization<<0..*>>
    Reference realizedClasses : Class<<0..*>>
    Reference realizingClasses : Class<<0..*>>

  Class Collection -> Classifier, MultiplicityElement, DataValueContainer, FinalizableElement
    Attribute isPrimitive : EBoolean
    Attribute visibility : VisibilityKind
    Attribute kind : CollectionKind
    Attribute aggregationKind : AggregationKind
    Reference type : Type
    Reference index : DataType<<0..*>>
    Reference containedOperations : Operation<<0..*>>

  Class AbstractCollectionValue -> DataValue

  Class CollectionValue -> AbstractCollectionValue
    Reference ownedElements : DataValue<<0..*>>
    Reference ownedDefaultElement : DataValue

  Class CollectionValueReference -> AbstractCollectionValue
    Reference referencedValue : AbstractCollectionValue
    Reference referencedProperty : Property

  Class DataPkg -> AbstractDependenciesPkg, AbstractExchangeItemPkg, AssociationPkg, DataValueContainer, MessageReferencePkg
    Reference ownedDataPkgs : DataPkg<<0..*>>
    Reference ownedClasses : Class<<0..*>>
    Reference ownedKeyParts : KeyPart<<0..*>>
    Reference ownedCollections : Collection<<0..*>>
    Reference ownedUnits : Unit<<0..*>>
    Reference ownedDataTypes : DataType<<0..*>>
    Reference ownedSignals : Signal<<0..*>>
    Reference ownedMessages : Message<<0..*>>
    Reference ownedExceptions : Exception<<0..*>>
    Reference ownedStateEvents : StateEvent<<0..*>>

  Class DomainElement -> Class

  Class KeyPart -> Relationship
    Reference property : Property<<1..1>>

  Class MultiplicityElement -> CapellaElement
    Attribute ordered : EBoolean
    Attribute unique : EBoolean
    Attribute minInclusive : EBoolean
    Attribute maxInclusive : EBoolean
    Reference ownedDefaultValue : DataValue
    Reference ownedMinValue : DataValue
    Reference ownedMaxValue : DataValue
    Reference ownedNullValue : DataValue
    Reference ownedMinCard : NumericValue
    Reference ownedMinLength : NumericValue
    Reference ownedMaxCard : NumericValue
    Reference ownedMaxLength : NumericValue

  Class Operation -> Feature, AbstractEvent, AbstractEventOperation
    Reference ownedParameters : Parameter<<0..*>>
    Reference allocatingOperations : Operation<<0..*>>
    Reference allocatedOperations : Operation<<0..*>>
    Reference ownedOperationAllocation : OperationAllocation<<0..*>>
    Reference ownedExchangeItemRealizations : ExchangeItemRealization<<0..*>>
    Reference realizedExchangeItems : ExchangeItem<<0..*>>

  Class OperationAllocation -> Allocation
    Reference allocatedOperation : Operation<<1..1>>
    Reference allocatingOperation : Operation<<1..1>>

  Class Parameter -> TypedElement, MultiplicityElement, AbstractParameter
    Attribute direction : ParameterDirection
    Attribute passingMode : PassingMode

  Class Property -> Feature, TypedElement, MultiplicityElement, FinalizableElement
    Attribute aggregationKind : AggregationKind
    Attribute isDerived : EBoolean
    Attribute isReadOnly : EBoolean
    Attribute isPartOfKey : EBoolean
    Reference association : Association

  Class Service -> Operation
    Attribute synchronismKind : SynchronismKind
    Reference thrownExceptions : Exception<<0..*>>
    Reference messages : Message<<0..*>>
    Reference messageReferences : MessageReference<<0..*>>

  Class Union -> Class
    Attribute kind : UnionKind
    Reference discriminant : UnionProperty
    Reference defaultProperty : UnionProperty
    Reference containedUnionProperties : UnionProperty<<0..*>>

  Class UnionProperty -> Property
    Reference qualifier : DataValue<<0..*>>

  Class Unit -> NamedElement

  Class Port -> NamedElement
    Reference incomingPortRealizations : PortRealization<<0..*>>
    Reference outgoingPortRealizations : PortRealization<<0..*>>
    Reference ownedProtocols : StateMachine<<0..*>>
    Reference incomingPortAllocations : PortAllocation<<0..*>>
    Reference outgoingPortAllocations : PortAllocation<<0..*>>
    Reference providedInterfaces : Interface<<0..*>>
    Reference requiredInterfaces : Interface<<0..*>>
    Reference ownedPortRealizations : PortRealization<<0..*>>
    Reference ownedPortAllocations : PortAllocation<<0..*>>

  Class PortRealization -> Allocation
    Reference realizedPort : Port<<1..1>>
    Reference realizingPort : Port<<1..1>>

  Class PortAllocation -> Allocation
    Reference allocatedPort : Port
    Reference allocatingPort : Port

  Class ExchangeItem -> AbstractExchangeItem, AbstractEvent, AbstractSignal, FinalizableElement, GeneralizableElement
    Attribute exchangeMechanism : ExchangeMechanism<<1..1>>
    Reference ownedElements : ExchangeItemElement<<0..*>>
    Reference ownedInformationRealizations : InformationRealization<<0..*>>
    Reference ownedExchangeItemInstances : ExchangeItemInstance<<0..*>>
    Reference allocatorInterfaces : Interface<<0..*>>
    Reference realizedExchangeItems : ExchangeItem<<0..*>>
    Reference realizingExchangeItems : ExchangeItem<<0..*>>
    Reference realizingOperations : Operation<<0..*>>

  Class ExchangeItemElement -> NamedElement, MultiplicityElement, TypedElement
    Attribute kind : ElementKind
    Attribute direction : ParameterDirection
    Attribute composite : EBoolean
    Reference referencedProperties : Property<<0..*>>

  Class ExchangeItemInstance -> AbstractInstance

  Class InformationRealization -> Allocation

  Class ExchangeItemRealization -> Allocation
    Reference realizedItem : AbstractExchangeItem
    Reference realizingOperation : Operation

  Class AbstractEventOperation -> NamedElement
    Reference invokingSequenceMessages : SequenceMessage<<0..*>>

  Enum AggregationKind
    Literal UNSET = 0
    Literal ASSOCIATION = 1
    Literal AGGREGATION = 2
    Literal COMPOSITION = 3

  Enum ParameterDirection
    Literal IN = 0
    Literal OUT = 1
    Literal INOUT = 2
    Literal RETURN = 3
    Literal EXCEPTION = 4
    Literal UNSET = 5

  Enum PassingMode
    Literal UNSET = 0
    Literal BY_REF = 1
    Literal BY_VALUE = 2

  Enum SynchronismKind
    Literal UNSET = 0
    Literal SYNCHRONOUS = 1
    Literal ASYNCHRONOUS = 2

  Enum UnionKind
    Literal UNION = 0
    Literal VARIANT = 1

  Enum ExchangeMechanism
    Literal UNSET = 0
    Literal FLOW = 1
    Literal OPERATION = 2
    Literal EVENT = 3
    Literal SHARED_DATA = 4

  Enum ElementKind
    Literal TYPE = 0
    Literal MEMBER = 1

  Enum CollectionKind
    Literal ARRAY = 0
    Literal SEQUENCE = 1

Package cs <platform:/resource/org.polarsys.capella.core.data.gen/model/CompositeStructure.ecore>

  Class BlockArchitecturePkg -> ModellingArchitecturePkg

  Class BlockArchitecture -> AbstractFunctionalArchitecture
    Reference ownedRequirementPkgs : RequirementsPkg<<0..*>>
    Reference ownedAbstractCapabilityPkg : AbstractCapabilityPkg
    Reference ownedInterfacePkg : InterfacePkg
    Reference ownedDataPkg : DataPkg
    Reference provisionedArchitectureAllocations : ArchitectureAllocation<<0..*>>
    Reference provisioningArchitectureAllocations : ArchitectureAllocation<<0..*>>
    Reference allocatedArchitectures : BlockArchitecture<<0..*>>
    Reference allocatingArchitectures : BlockArchitecture<<0..*>>
    Reference system : Component

  Class Block -> ModellingBlock, AbstractFunctionalBlock
    Reference ownedAbstractCapabilityPkg : AbstractCapabilityPkg
    Reference ownedInterfacePkg : InterfacePkg
    Reference ownedDataPkg : DataPkg
    Reference ownedStateMachines : StateMachine<<0..*>>

  Class ComponentArchitecture -> BlockArchitecture

  Class Component -> Block, Classifier, InterfaceAllocator, CommunicationLinkExchanger
    Attribute actor : EBoolean<<1..1>>
    Attribute human : EBoolean<<1..1>>
    Reference ownedInterfaceUses : InterfaceUse<<0..*>>
    Reference usedInterfaceLinks : InterfaceUse<<0..*>>
    Reference usedInterfaces : Interface<<0..*>>
    Reference ownedInterfaceImplementations : InterfaceImplementation<<0..*>>
    Reference implementedInterfaceLinks : InterfaceImplementation<<0..*>>
    Reference implementedInterfaces : Interface<<0..*>>
    Reference ownedComponentRealizations : ComponentRealization<<0..*>>
    Reference realizedComponents : Component<<0..*>>
    Reference realizingComponents : Component<<0..*>>
    Reference providedInterfaces : Interface<<0..*>>
    Reference requiredInterfaces : Interface<<0..*>>
    Reference containedComponentPorts : ComponentPort<<0..*>>
    Reference containedParts : Part<<0..*>>
    Reference containedPhysicalPorts : PhysicalPort<<0..*>>
    Reference ownedPhysicalPath : PhysicalPath<<0..*>>
    Reference ownedPhysicalLinks : PhysicalLink<<0..*>>
    Reference ownedPhysicalLinkCategories : PhysicalLinkCategory<<0..*>>
    Reference representingParts : Part<<0..*>>

  Class Part -> AbstractInstance, InformationsExchanger, DeployableElement, DeploymentTarget, AbstractPathInvolvedElement
    Reference providedInterfaces : Interface<<0..*>>
    Reference requiredInterfaces : Interface<<0..*>>
    Reference ownedDeploymentLinks : AbstractDeploymentLink<<0..*>>
    Reference deployedParts : Part<<0..*>>
    Reference deployingParts : Part<<0..*>>
    Reference ownedAbstractType : AbstractType

  Class ArchitectureAllocation -> Allocation
    Reference allocatedArchitecture : BlockArchitecture<<1..1>>
    Reference allocatingArchitecture : BlockArchitecture<<1..1>>

  Class ComponentRealization -> Allocation
    Reference realizedComponent : Component
    Reference realizingComponent : Component

  Class InterfacePkg -> MessageReferencePkg, AbstractDependenciesPkg, AbstractExchangeItemPkg
    Reference ownedInterfaces : Interface<<0..*>>
    Reference ownedInterfacePkgs : InterfacePkg<<0..*>>

  Class Interface -> GeneralClass, InterfaceAllocator
    Attribute mechanism : EString
    Attribute structural : EBoolean
    Reference implementorComponents : Component<<0..*>>
    Reference userComponents : Component<<0..*>>
    Reference interfaceImplementations : InterfaceImplementation<<0..*>>
    Reference interfaceUses : InterfaceUse<<0..*>>
    Reference provisioningInterfaceAllocations : InterfaceAllocation<<0..*>>
    Reference allocatingInterfaces : Interface<<0..*>>
    Reference allocatingComponents : Component<<0..*>>
    Reference exchangeItems : ExchangeItem<<0..*>>
    Reference ownedExchangeItemAllocations : ExchangeItemAllocation<<0..*>>
    Reference requiringComponents : Component<<0..*>>
    Reference requiringComponentPorts : ComponentPort<<0..*>>
    Reference providingComponents : Component<<0..*>>
    Reference providingComponentPorts : ComponentPort<<0..*>>
    Reference realizingLogicalInterfaces : Interface<<0..*>>
    Reference realizedContextInterfaces : Interface<<0..*>>
    Reference realizingPhysicalInterfaces : Interface<<0..*>>
    Reference realizedLogicalInterfaces : Interface<<0..*>>

  Class InterfaceImplementation -> Relationship
    Reference interfaceImplementor : Component<<1..1>>
    Reference implementedInterface : Interface<<1..1>>

  Class InterfaceUse -> Relationship
    Reference interfaceUser : Component<<1..1>>
    Reference usedInterface : Interface<<1..1>>

  Class ProvidedInterfaceLink -> Relationship
    Reference interface : Interface<<1..1>>

  Class RequiredInterfaceLink -> Relationship
    Reference interface : Interface<<1..1>>

  Class InterfaceAllocation -> Allocation
    Reference allocatedInterface : Interface<<1..1>>
    Reference allocatingInterfaceAllocator : InterfaceAllocator<<1..1>>

  Class InterfaceAllocator -> CapellaElement
    Reference ownedInterfaceAllocations : InterfaceAllocation<<0..*>>
    Reference provisionedInterfaceAllocations : InterfaceAllocation<<0..*>>
    Reference allocatedInterfaces : Interface<<0..*>>

  Class ExchangeItemAllocation -> Relationship, AbstractEventOperation, FinalizableElement
    Attribute sendProtocol : CommunicationLinkProtocol
    Attribute receiveProtocol : CommunicationLinkProtocol
    Reference allocatedItem : ExchangeItem
    Reference allocatingInterface : Interface

  Class DeployableElement -> NamedElement
    Reference deployingLinks : AbstractDeploymentLink<<0..*>>

  Class DeploymentTarget -> NamedElement
    Reference deploymentLinks : AbstractDeploymentLink<<0..*>>

  Class AbstractDeploymentLink -> Relationship
    Reference deployedElement : DeployableElement<<1..1>>
    Reference location : DeploymentTarget<<1..1>>

  Class AbstractPathInvolvedElement -> InvolvedElement

  Class AbstractPhysicalArtifact -> CapellaElement
    Reference allocatorConfigurationItems : ConfigurationItem<<0..*>>

  Class AbstractPhysicalLinkEnd -> CapellaElement
    Reference involvedLinks : PhysicalLink<<0..*>>

  Class AbstractPhysicalPathLink -> ComponentExchangeAllocator

  Class PhysicalLink -> AbstractPhysicalPathLink, AbstractPhysicalArtifact, AbstractPathInvolvedElement
    Reference linkEnds : AbstractPhysicalLinkEnd<<2..2>>
    Reference ownedComponentExchangeFunctionalExchangeAllocations : ComponentExchangeFunctionalExchangeAllocation<<0..*>>
    Reference ownedPhysicalLinkEnds : PhysicalLinkEnd<<0..*>>
    Reference ownedPhysicalLinkRealizations : PhysicalLinkRealization<<0..*>>
    Reference categories : PhysicalLinkCategory<<0..*>>
    Reference sourcePhysicalPort : PhysicalPort
    Reference targetPhysicalPort : PhysicalPort
    Reference realizedPhysicalLinks : PhysicalLink<<0..*>>
    Reference realizingPhysicalLinks : PhysicalLink<<0..*>>

  Class PhysicalLinkCategory -> NamedElement
    Reference links : PhysicalLink<<0..*>>

  Class PhysicalLinkEnd -> AbstractPhysicalLinkEnd
    Reference port : PhysicalPort
    Reference part : Part

  Class PhysicalLinkRealization -> Allocation

  Class PhysicalPath -> NamedElement, ComponentExchangeAllocator, AbstractPathInvolvedElement, InvolverElement
    Reference involvedLinks : AbstractPhysicalPathLink<<0..*>>
    Reference ownedPhysicalPathInvolvements : PhysicalPathInvolvement<<0..*>>
    Reference firstPhysicalPathInvolvements : PhysicalPathInvolvement<<0..*>>
    Reference ownedPhysicalPathRealizations : PhysicalPathRealization<<0..*>>
    Reference realizedPhysicalPaths : PhysicalPath<<0..*>>
    Reference realizingPhysicalPaths : PhysicalPath<<0..*>>

  Class PhysicalPathInvolvement -> Involvement
    Reference nextInvolvements : PhysicalPathInvolvement<<0..*>>
    Reference previousInvolvements : PhysicalPathInvolvement<<0..*>>
    Reference involvedElement : AbstractPathInvolvedElement
    Reference involvedComponent : Component

  Class PhysicalPathReference -> PhysicalPathInvolvement
    Reference referencedPhysicalPath : PhysicalPath

  Class PhysicalPathRealization -> Allocation

  Class PhysicalPort -> Port, AbstractPhysicalArtifact, InformationsExchanger, AbstractPhysicalLinkEnd, Property
    Reference ownedComponentPortAllocations : ComponentPortAllocation<<0..*>>
    Reference ownedPhysicalPortRealizations : PhysicalPortRealization<<0..*>>
    Reference allocatedComponentPorts : ComponentPort<<0..*>>
    Reference realizedPhysicalPorts : PhysicalPort<<0..*>>
    Reference realizingPhysicalPorts : PhysicalPort<<0..*>>

  Class PhysicalPortRealization -> Allocation

  Class ComponentPkg -> Structure
    Reference ownedParts : Part<<0..*>>
    Reference ownedComponentExchanges : ComponentExchange<<0..*>>
    Reference ownedComponentExchangeCategories : ComponentExchangeCategory<<0..*>>
    Reference ownedFunctionalLinks : ExchangeLink<<0..*>>
    Reference ownedFunctionalAllocations : ComponentFunctionalAllocation<<0..*>>
    Reference ownedComponentExchangeRealizations : ComponentExchangeRealization<<0..*>>
    Reference ownedPhysicalLinks : PhysicalLink<<0..*>>
    Reference ownedPhysicalLinkCategories : PhysicalLinkCategory<<0..*>>
    Reference ownedStateMachines : StateMachine<<0..*>>

Package fa <platform:/resource/org.polarsys.capella.core.data.gen/model/FunctionalAnalysis.ecore>

  Class AbstractFunctionalArchitecture -> ModellingArchitecture
    Reference ownedFunctionPkg : FunctionPkg
    Reference ownedComponentExchanges : ComponentExchange<<0..*>>
    Reference ownedComponentExchangeCategories : ComponentExchangeCategory<<0..*>>
    Reference ownedFunctionalLinks : ExchangeLink<<0..*>>
    Reference ownedFunctionalAllocations : ComponentFunctionalAllocation<<0..*>>
    Reference ownedComponentExchangeRealizations : ComponentExchangeRealization<<0..*>>

  Class AbstractFunctionalBlock -> ModellingBlock
    Reference ownedFunctionalAllocation : ComponentFunctionalAllocation<<0..*>>
    Reference ownedComponentExchanges : ComponentExchange<<0..*>>
    Reference ownedComponentExchangeCategories : ComponentExchangeCategory<<0..*>>
    Reference functionalAllocations : ComponentFunctionalAllocation<<0..*>>
    Reference allocatedFunctions : AbstractFunction<<0..*>>
    Reference inExchangeLinks : ExchangeLink<<0..*>>
    Reference outExchangeLinks : ExchangeLink<<0..*>>

  Class FunctionPkg -> Structure
    Reference ownedFunctionalLinks : ExchangeLink<<0..*>>
    Reference ownedExchanges : FunctionalExchangeSpecification<<0..*>>
    Reference ownedExchangeSpecificationRealizations : ExchangeSpecificationRealization<<0..*>>
    Reference ownedCategories : ExchangeCategory<<0..*>>
    Reference ownedFunctionSpecifications : FunctionSpecification<<0..*>>

  Class FunctionSpecification -> Namespace, AbstractActivity
    Reference inExchangeLinks : ExchangeLink<<0..*>>
    Reference outExchangeLinks : ExchangeLink<<0..*>>
    Reference ownedFunctionPorts : FunctionPort<<0..*>>
    Reference subFunctionSpecifications : FunctionSpecification<<0..*>>

  Class ExchangeCategory -> NamedElement
    Reference exchanges : FunctionalExchange<<0..*>>

  Class ExchangeLink -> NamedRelationship
    Reference exchanges : ExchangeSpecification<<0..*>>
    Reference exchangeContainmentLinks : ExchangeContainment<<0..*>>
    Reference ownedExchangeContainments : ExchangeContainment<<0..*>>
    Reference sources : FunctionSpecification<<0..*>>
    Reference destinations : FunctionSpecification<<0..*>>

  Class ExchangeContainment -> Relationship
    Reference exchange : ExchangeSpecification<<1..1>>
    Reference link : ExchangeLink<<1..1>>

  Class ExchangeSpecification -> NamedElement, ActivityExchange
    Reference containingLink : ExchangeLink
    Reference link : ExchangeContainment
    Reference outgoingExchangeSpecificationRealizations : ExchangeSpecificationRealization<<0..*>>
    Reference incomingExchangeSpecificationRealizations : ExchangeSpecificationRealization<<0..*>>

  Class FunctionalExchangeSpecification -> ExchangeSpecification
    Reference functionalExchanges : FunctionalExchange<<0..*>>

  Class FunctionalChain -> NamedElement, InvolverElement, InvolvedElement
    Attribute kind : FunctionalChainKind
    Reference ownedFunctionalChainInvolvements : FunctionalChainInvolvement<<0..*>>
    Reference ownedFunctionalChainRealizations : FunctionalChainRealization<<0..*>>
    Reference involvedFunctionalChainInvolvements : FunctionalChainInvolvement<<0..*>>
    Reference involvedFunctions : AbstractFunction<<0..*>>
    Reference involvedFunctionalExchanges : FunctionalExchange<<0..*>>
    Reference involvedElements : InvolvedElement<<0..*>>
    Reference enactedFunctions : AbstractFunction<<0..*>>
    Reference enactedFunctionalBlocks : AbstractFunctionalBlock<<0..*>>
    Reference availableInStates : State<<0..*>>
    Reference firstFunctionalChainInvolvements : FunctionalChainInvolvement<<0..*>>
    Reference involvingCapabilities : Capability<<0..*>>
    Reference involvingCapabilityRealizations : CapabilityRealization<<0..*>>
    Reference realizedFunctionalChains : FunctionalChain<<0..*>>
    Reference realizingFunctionalChains : FunctionalChain<<0..*>>
    Reference preCondition : Constraint
    Reference postCondition : Constraint
    Reference ownedSequenceNodes : ControlNode<<0..*>>
    Reference ownedSequenceLinks : SequenceLink<<0..*>>

  Class AbstractFunctionalChainContainer -> CapellaElement
    Reference ownedFunctionalChains : FunctionalChain<<0..*>>

  Class FunctionalChainInvolvement -> Involvement
    Reference nextFunctionalChainInvolvements : FunctionalChainInvolvement<<0..*>>
    Reference previousFunctionalChainInvolvements : FunctionalChainInvolvement<<0..*>>
    Reference involvedElement : InvolvedElement

  Class FunctionalChainReference -> FunctionalChainInvolvement
    Reference referencedFunctionalChain : FunctionalChain

  Class FunctionInputPort -> FunctionPort, InputPin
    Reference incomingExchangeItems : ExchangeItem<<0..*>>
    Reference incomingFunctionalExchanges : FunctionalExchange<<0..*>>

  Class FunctionOutputPort -> FunctionPort, OutputPin
    Reference outgoingExchangeItems : ExchangeItem<<0..*>>
    Reference outgoingFunctionalExchanges : FunctionalExchange<<0..*>>

  Class AbstractFunctionAllocation -> Allocation

  Class ComponentFunctionalAllocation -> AbstractFunctionAllocation
    Reference function : AbstractFunction<<1..1>>
    Reference block : AbstractFunctionalBlock<<1..1>>

  Class FunctionalChainRealization -> Allocation

  Class ExchangeSpecificationRealization -> Allocation
    Reference realizedExchangeSpecification : ExchangeSpecification<<1..1>>
    Reference realizingExchangeSpecification : ExchangeSpecification<<1..1>>

  Class FunctionalExchangeRealization -> Allocation
    Reference realizedFunctionalExchange : FunctionalExchange<<1..1>>
    Reference realizingFunctionalExchange : FunctionalExchange<<1..1>>

  Class FunctionRealization -> AbstractFunctionAllocation
    Reference allocatedFunction : AbstractFunction<<1..1>>
    Reference allocatingFunction : AbstractFunction<<1..1>>

  Class FunctionalExchange -> NamedElement, Relationship, InvolvedElement, ObjectFlow, AbstractEvent, AbstractEventOperation
    Reference exchangeSpecifications : FunctionalExchangeSpecification<<0..*>>
    Reference involvingFunctionalChains : FunctionalChain<<0..*>>
    Reference exchangedItems : ExchangeItem<<0..*>>
    Reference allocatingComponentExchanges : ComponentExchange<<0..*>>
    Reference incomingComponentExchangeFunctionalExchangeRealizations : ComponentExchangeFunctionalExchangeAllocation<<0..*>>
    Reference incomingFunctionalExchangeRealizations : FunctionalExchangeRealization<<0..*>>
    Reference outgoingFunctionalExchangeRealizations : FunctionalExchangeRealization<<0..*>>
    Reference categories : ExchangeCategory<<0..*>>
    Reference ownedFunctionalExchangeRealizations : FunctionalExchangeRealization<<0..*>>
    Reference sourceFunctionOutputPort : FunctionOutputPort
    Reference targetFunctionInputPort : FunctionInputPort
    Reference realizedFunctionalExchanges : FunctionalExchange<<0..*>>
    Reference realizingFunctionalExchanges : FunctionalExchange<<0..*>>

  Class AbstractFunction -> Namespace, InvolvedElement, AbstractInstance, AbstractFunctionalChainContainer, CallBehaviorAction, AbstractEvent
    Attribute kind : FunctionKind
    Attribute condition : EString
    Reference ownedFunctions : AbstractFunction<<0..*>>
    Reference ownedFunctionRealizations : FunctionRealization<<0..*>>
    Reference ownedFunctionalExchanges : FunctionalExchange<<0..*>>
    Reference subFunctions : AbstractFunction<<0..*>>
    Reference outFunctionRealizations : FunctionRealization<<0..*>>
    Reference inFunctionRealizations : FunctionRealization<<0..*>>
    Reference componentFunctionalAllocations : ComponentFunctionalAllocation<<0..*>>
    Reference allocationBlocks : AbstractFunctionalBlock<<0..*>>
    Reference availableInStates : State<<0..*>>
    Reference involvingCapabilities : Capability<<0..*>>
    Reference involvingCapabilityRealizations : CapabilityRealization<<0..*>>
    Reference involvingFunctionalChains : FunctionalChain<<0..*>>
    Reference linkedStateMachine : StateMachine
    Reference linkedFunctionSpecification : FunctionSpecification

  Class FunctionPort -> Port, TypedElement, AbstractEvent
    Reference representedComponentPort : ComponentPort
    Reference allocatorComponentPorts : ComponentPort<<0..*>>
    Reference realizedFunctionPorts : FunctionPort<<0..*>>
    Reference realizingFunctionPorts : FunctionPort<<0..*>>

  Class ComponentExchange -> AbstractEvent, AbstractEventOperation, NamedElement, ExchangeSpecification
    Attribute kind : ComponentExchangeKind
    Attribute oriented : EBoolean
    Reference allocatedFunctionalExchanges : FunctionalExchange<<0..*>>
    Reference incomingComponentExchangeRealizations : ComponentExchangeRealization<<0..*>>
    Reference outgoingComponentExchangeRealizations : ComponentExchangeRealization<<0..*>>
    Reference outgoingComponentExchangeFunctionalExchangeAllocations : ComponentExchangeFunctionalExchangeAllocation<<0..*>>
    Reference ownedComponentExchangeFunctionalExchangeAllocations : ComponentExchangeFunctionalExchangeAllocation<<0..*>>
    Reference ownedComponentExchangeRealizations : ComponentExchangeRealization<<0..*>>
    Reference ownedComponentExchangeEnds : ComponentExchangeEnd<<0..*>>
    Reference sourcePort : Port
    Reference sourcePart : Part
    Reference targetPort : Port
    Reference targetPart : Part
    Reference categories : ComponentExchangeCategory<<0..*>>
    Reference allocatorPhysicalLinks : PhysicalLink<<0..*>>
    Reference realizedComponentExchanges : ComponentExchange<<0..*>>
    Reference realizingComponentExchanges : ComponentExchange<<0..*>>

  Class ComponentExchangeAllocation -> Allocation
    Reference componentExchangeAllocated : ComponentExchange<<1..1>>
    Reference componentExchangeAllocator : ComponentExchangeAllocator<<1..1>>

  Class ComponentExchangeAllocator -> NamedElement
    Reference ownedComponentExchangeAllocations : ComponentExchangeAllocation<<0..*>>
    Reference allocatedComponentExchanges : ComponentExchange<<0..*>>

  Class ComponentExchangeCategory -> NamedElement
    Reference exchanges : ComponentExchange<<0..*>>

  Class ComponentExchangeEnd -> InformationsExchanger, CapellaElement
    Reference port : Port
    Reference part : Part

  Class ComponentExchangeFunctionalExchangeAllocation -> AbstractFunctionAllocation
    Reference allocatedFunctionalExchange : FunctionalExchange<<1..1>>
    Reference allocatingComponentExchange : ComponentExchange<<1..1>>

  Class ComponentExchangeRealization -> ExchangeSpecificationRealization
    Reference allocatedComponentExchange : ComponentExchange<<1..1>>
    Reference allocatingComponentExchange : ComponentExchange<<1..1>>

  Class ComponentPort -> Port, InformationsExchanger, Property
    Attribute orientation : OrientationPortKind
    Attribute kind : ComponentPortKind
    Reference componentExchanges : ComponentExchange<<0..*>>
    Reference allocatedFunctionPorts : FunctionPort<<0..*>>
    Reference delegatedComponentPorts : ComponentPort<<0..*>>
    Reference delegatingComponentPorts : ComponentPort<<0..*>>
    Reference allocatingPhysicalPorts : PhysicalPort<<0..*>>
    Reference realizedComponentPorts : ComponentPort<<0..*>>
    Reference realizingComponentPorts : ComponentPort<<0..*>>

  Class ComponentPortAllocation -> Allocation
    Reference ownedComponentPortAllocationEnds : ComponentPortAllocationEnd<<0..*>>
    Reference allocatedPort : Port
    Reference allocatingPort : Port

  Class ComponentPortAllocationEnd -> CapellaElement
    Reference port : Port
    Reference part : Part
    Reference owningComponentPortAllocation : ComponentPortAllocation

  Class FunctionalChainInvolvementLink -> FunctionalChainInvolvement, ReferenceHierarchyContext
    Reference exchangeContext : Constraint
    Reference exchangedItems : ExchangeItem<<0..*>>
    Reference source : FunctionalChainInvolvementFunction
    Reference target : FunctionalChainInvolvementFunction

  Class SequenceLink -> CapellaElement, ReferenceHierarchyContext
    Reference condition : Constraint
    Reference links : FunctionalChainInvolvementLink<<0..*>>
    Reference source : SequenceLinkEnd
    Reference target : SequenceLinkEnd

  Class SequenceLinkEnd -> CapellaElement

  Class FunctionalChainInvolvementFunction -> FunctionalChainInvolvement, SequenceLinkEnd
    Reference outgoingInvolvementLinks : FunctionalChainInvolvementLink<<0..*>>
    Reference incomingInvolvementLinks : FunctionalChainInvolvementLink<<0..*>>

  Class ControlNode -> SequenceLinkEnd
    Attribute kind : ControlNodeKind

  Class ReferenceHierarchyContext
    Reference sourceReferenceHierarchy : FunctionalChainReference<<0..*>>
    Reference targetReferenceHierarchy : FunctionalChainReference<<0..*>>

  Enum FunctionalChainKind
    Literal SIMPLE = 0
    Literal COMPOSITE = 1
    Literal FRAGMENT = 2

  Enum FunctionKind
    Literal FUNCTION = 0
    Literal DUPLICATE = 1
    Literal GATHER = 2
    Literal SELECT = 3
    Literal SPLIT = 4
    Literal ROUTE = 5

  Enum ComponentExchangeKind
    Literal UNSET = 0
    Literal DELEGATION = 1
    Literal ASSEMBLY = 2
    Literal FLOW = 3

  Enum ComponentPortKind
    Literal STANDARD = 0
    Literal FLOW = 1

  Enum OrientationPortKind
    Literal UNSET = 0
    Literal IN = 1
    Literal OUT = 2
    Literal INOUT = 3

  Enum ControlNodeKind
    Literal OR = 0
    Literal AND = 1
    Literal ITERATE = 2

Package interaction <platform:/resource/org.polarsys.capella.core.data.gen/model/Interaction.ecore>

  Class SequenceMessage -> NamedElement
    Attribute kind : MessageKind
    Reference exchangeContext : Constraint
    Reference sendingEnd : MessageEnd
    Reference receivingEnd : MessageEnd
    Reference invokedOperation : AbstractEventOperation
    Reference exchangedItems : ExchangeItem<<0..*>>
    Reference sendingPart : Part
    Reference receivingPart : Part
    Reference sendingFunction : AbstractFunction
    Reference receivingFunction : AbstractFunction
    Reference ownedSequenceMessageValuations : SequenceMessageValuation<<0..*>>

  Class Scenario -> Namespace, AbstractBehavior
    Attribute kind : ScenarioKind
    Attribute merged : EBoolean
    Reference preCondition : Constraint
    Reference postCondition : Constraint
    Reference ownedInstanceRoles : InstanceRole<<0..*>>
    Reference ownedMessages : SequenceMessage<<0..*>>
    Reference ownedInteractionFragments : InteractionFragment<<0..*>>
    Reference ownedTimeLapses : TimeLapse<<0..*>>
    Reference ownedEvents : Event<<0..*>>
    Reference ownedFormalGates : Gate<<0..*>>
    Reference ownedScenarioRealization : ScenarioRealization<<0..*>>
    Reference ownedConstraintDurations : ConstraintDuration<<0..*>>
    Reference containedFunctions : AbstractFunction<<0..*>>
    Reference containedParts : Part<<0..*>>
    Reference referencedScenarios : Scenario<<0..*>>
    Reference realizedScenarios : Scenario<<0..*>>
    Reference realizingScenarios : Scenario<<0..*>>

  Class MessageEnd -> AbstractEnd
    Reference message : SequenceMessage<<1..1>>

  Class Execution -> TimeLapse
    Reference covered : InstanceRole<<1..1>>

  Class ExecutionEnd -> AbstractEnd
    Reference execution : Execution<<1..1>>

  Class CreationEvent -> Event

  Class DestructionEvent -> Event

  Class ExecutionEvent -> Event

  Class InstanceRole -> NamedElement
    Reference abstractEnds : AbstractEnd<<0..*>>
    Reference representedInstance : AbstractInstance<<1..1>>

  Class AbstractEnd -> InteractionFragment
    Reference event : Event<<1..1>>
    Reference covered : InstanceRole<<1..1>>

  Class Event -> NamedElement, AbstractEvent

  Class EventReceiptOperation -> Event
    Reference operation : AbstractEventOperation

  Class EventSentOperation -> Event
    Reference operation : AbstractEventOperation

  Class MergeLink -> Trace

  Class RefinementLink -> Trace

  Class AbstractCapabilityRealization -> Allocation
    Reference realizedCapability : AbstractCapability<<1..1>>
    Reference realizingCapability : AbstractCapability<<1..1>>

  Class AbstractCapability -> Structure, InvolverElement, AbstractFunctionalChainContainer
    Reference preCondition : Constraint
    Reference postCondition : Constraint
    Reference ownedScenarios : Scenario<<0..*>>
    Reference incomingCapabilityAllocation : AbstractCapabilityRealization<<0..*>>
    Reference outgoingCapabilityAllocation : AbstractCapabilityRealization<<0..*>>
    Reference extends : AbstractCapabilityExtend<<0..*>>
    Reference extending : AbstractCapabilityExtend<<0..*>>
    Reference abstractCapabilityExtensionPoints : AbstractCapabilityExtensionPoint<<0..*>>
    Reference superGeneralizations : AbstractCapabilityGeneralization<<0..*>>
    Reference subGeneralizations : AbstractCapabilityGeneralization<<0..*>>
    Reference includes : AbstractCapabilityInclude<<0..*>>
    Reference including : AbstractCapabilityInclude<<0..*>>
    Reference super : AbstractCapability<<0..*>>
    Reference sub : AbstractCapability<<0..*>>
    Reference includedAbstractCapabilities : AbstractCapability<<0..*>>
    Reference includingAbstractCapabilities : AbstractCapability<<0..*>>
    Reference extendedAbstractCapabilities : AbstractCapability<<0..*>>
    Reference extendingAbstractCapabilities : AbstractCapability<<0..*>>
    Reference ownedFunctionalChainAbstractCapabilityInvolvements : FunctionalChainAbstractCapabilityInvolvement<<0..*>>
    Reference ownedAbstractFunctionAbstractCapabilityInvolvements : AbstractFunctionAbstractCapabilityInvolvement<<0..*>>
    Reference availableInStates : State<<0..*>>
    Reference ownedAbstractCapabilityRealizations : AbstractCapabilityRealization<<0..*>>
    Reference involvedAbstractFunctions : AbstractFunction<<0..*>>
    Reference involvedFunctionalChains : FunctionalChain<<0..*>>

  Class AbstractCapabilityExtend -> Relationship
    Reference extended : AbstractCapability<<1..1>>
    Reference extension : AbstractCapability<<1..1>>
    Reference extensionLocation : AbstractCapabilityExtensionPoint

  Class AbstractCapabilityExtensionPoint -> NamedRelationship
    Reference abstractCapability : AbstractCapability<<1..1>>
    Reference extendLinks : AbstractCapabilityExtend<<0..*>>

  Class AbstractCapabilityGeneralization -> Relationship
    Reference super : AbstractCapability<<1..1>>
    Reference sub : AbstractCapability<<1..1>>

  Class AbstractCapabilityInclude -> Relationship
    Reference included : AbstractCapability<<1..1>>
    Reference inclusion : AbstractCapability<<1..1>>

  Class InteractionFragment -> NamedElement
    Reference coveredInstanceRoles : InstanceRole<<1..*>>

  Class InteractionState -> InteractionFragment
    Reference relatedAbstractState : AbstractState
    Reference relatedAbstractFunction : AbstractFunction
    Reference covered : InstanceRole<<1..1>>

  Class InteractionUse -> AbstractFragment
    Reference referencedScenario : Scenario
    Reference actualGates : Gate<<0..*>>

  Class CombinedFragment -> AbstractFragment
    Attribute operator : InteractionOperatorKind
    Reference referencedOperands : InteractionOperand<<0..*>>
    Reference expressionGates : Gate<<0..*>>

  Class Gate -> MessageEnd

  Class InteractionOperand -> InteractionFragment
    Reference referencedInteractionFragments : InteractionFragment<<0..*>>
    Reference guard : Constraint

  Class TimeLapse -> NamedElement
    Reference start : InteractionFragment<<1..1>>
    Reference finish : InteractionFragment<<1..1>>

  Class AbstractFragment -> TimeLapse
    Reference ownedGates : Gate<<0..*>>

  Class FragmentEnd -> InteractionFragment
    Reference abstractFragment : AbstractFragment<<1..1>>

  Class FunctionalChainAbstractCapabilityInvolvement -> Involvement
    Reference capability : AbstractCapability<<1..1>>
    Reference functionalChain : FunctionalChain<<1..1>>

  Class AbstractFunctionAbstractCapabilityInvolvement -> Involvement
    Reference capability : AbstractCapability<<1..1>>
    Reference function : AbstractFunction<<1..1>>

  Class ScenarioRealization -> Allocation
    Reference realizedScenario : Scenario
    Reference realizingScenario : Scenario

  Class StateFragment -> TimeLapse
    Reference relatedAbstractState : AbstractState
    Reference relatedAbstractFunction : AbstractFunction

  Class ArmTimerEvent -> Event

  Class CancelTimerEvent -> Event

  Class ConstraintDuration -> NamedElement
    Attribute duration : EString
    Reference start : InteractionFragment
    Reference finish : InteractionFragment

  Class SequenceMessageValuation -> CapellaElement
    Reference exchangeItemElement : ExchangeItemElement
    Reference value : ValueSpecification

  Enum MessageKind
    Literal UNSET = 0
    Literal ASYNCHRONOUS_CALL = 1
    Literal SYNCHRONOUS_CALL = 2
    Literal REPLY = 3
    Literal DELETE = 4
    Literal CREATE = 5
    Literal TIMER = 6

  Enum ScenarioKind
    Literal UNSET = 4
    Literal INTERFACE = 0
    Literal DATA_FLOW = 1
    Literal INTERACTION = 2
    Literal FUNCTIONAL = 3

  Enum InteractionOperatorKind
    Literal UNSET = 11
    Literal ALT = 0
    Literal OPT = 1
    Literal PAR = 2
    Literal LOOP = 3
    Literal CRITICAL = 4
    Literal NEG = 5
    Literal ASSERT = 6
    Literal STRICT = 7
    Literal SEQ = 8
    Literal IGNORE = 9
    Literal CONSIDER = 10
